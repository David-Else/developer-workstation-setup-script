- name: Install packages and binaries for Debian 12
  hosts: localhost
  vars:
    user_programs: /usr/local/bin

  tasks:
    # =========================================================================
    # Add and enable repositories
    # =========================================================================
    - name: Add the Flathub repository
      community.general.flatpak_remote:
        name: flathub
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
        state: present

    # =========================================================================
    # Remove packages
    # =========================================================================
    - name: Remove unwanted desktop apps
      become: true
      ansible.builtin.package:
        name:
          - cheese
          - rhythmbox
          - totem
          - evolution
        state: absent

    # =========================================================================
    # Install packages
    # =========================================================================
    - name: Update and upgrade all packages
      become: true
      ansible.builtin.apt:
        upgrade: true
        update_cache: true

    - name: Install packages
      become: true
      ansible.builtin.package:
        name:
          - bat
          - blender
          - borgbackup
          - ffmpeg
          - gh
          - gnome-tweaks
          - gthumb
          - imagemagick
          - keepassxc
          - kitty
          - mediainfo
          - nnn
          - nodejs
          - optipng
          - pandoc
          - ripgrep
          - shellcheck
          - stow
          - thunderbird
          - tldr
          - transmission
          - trash-cli
          - xclip
          - xdg-desktop-portal-gnome
          - yt-dlp
          - zathura
          - screenkey
          - curl
          - npm
          - default-jre-headless
          - build-essential
          - shfmt
          - rclone
          - gh
          - gnome-software-plugin-flatpak
          - mpv
          - mkvtoolnix-gui
          - krita
        state: present

    - name: Install Flatpak packages
      become: true
      community.general.flatpak:
        name:
          - com.obsproject.Studio
          - com.obsproject.Studio.Plugin.MoveTransition
          - fr.handbrake.ghb
          - org.signal.Signal
          - com.github.tchx84.Flatseal
        state: present

    - name: Install NPM global packages
      become: true
      loop:
        - bash-language-server@4.9.1
        - prettier@2.8.8
        - typescript-language-server@3.3.2
        - typescript@5.0.4
        - vscode-langservers-extracted@4.7.0
        - yaml-language-server@1.11.0
      community.general.npm:
        name: "{{ item }}"
        state: present
        global: true

    # =========================================================================
    # Install binaries
    # =========================================================================
    - name: Check packages
      ansible.builtin.package_facts:
        manager: auto

    # nnn plugins
    - name: Download the latest nnn plugins
      when: "'nnn' in ansible_facts.packages"
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/jarun/nnn/master/plugins/getplugs
        dest: /tmp/getplugs
        mode: '0755'

    - name: Install nnn plugins
      when: "'nnn' in ansible_facts.packages"
      ansible.builtin.command: /tmp/getplugs
      args:
        creates: "{{ lookup('env', 'HOME') }}/.config/nnn/plugins"

    # Fonts
    - name: Create ~/.local/share/fonts directory
      ansible.builtin.file:
        path: "{{ lookup('ansible.builtin.env', 'HOME') }}/.local/share/fonts"
        state: directory

    - name: Copy nerd fonts symbols only
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/extras/SymbolsNerdFontMono-Regular.ttf"
        dest: "{{ lookup('ansible.builtin.env', 'HOME') }}/.local/share/fonts/SymbolsNerdFontMono-Regular.ttf"

    - name: Refresh font cache
      ansible.builtin.command: fc-cache -vf
      changed_when: false

    # GitHub binaries
    - name: Download and install GitHub binaries
      become: true
      block:
        - name: Download and install Marksman language server
          ansible.builtin.get_url:
            url: https://github.com/artempyanykh/marksman/releases/download/2023-01-29/marksman-linux
            dest: "{{ user_programs }}/marksman"
            mode: '0755'

        - name: Download and install delta
          ansible.builtin.unarchive:
            src: https://github.com/dandavison/delta/releases/download/0.15.1/delta-0.15.1-x86_64-unknown-linux-musl.tar.gz
            dest: "{{ user_programs }}"
            remote_src: true
            extra_opts:
              - "--strip-components=1"
              - "delta-0.15.1-x86_64-unknown-linux-musl/delta"

        - name: Download and install ltex-ls
          ansible.builtin.unarchive:
            src: https://github.com/valentjn/ltex-ls/releases/download/16.0.0/ltex-ls-16.0.0.tar.gz
            dest: "{{ user_programs }}"
            remote_src: true
            extra_opts:
              - "--strip-components=1"
              - "ltex-ls-16.0.0/bin"
              - "ltex-ls-16.0.0/lib"

        - name: Create symlink to ltex-ls binary
          ansible.builtin.file:
            src: "{{ user_programs }}/bin/ltex-ls"
            dest: "{{ user_programs }}/ltex-ls"
            state: link

        - name: Download and install vale
          ansible.builtin.unarchive:
            src: https://github.com/errata-ai/vale/releases/download/v2.22.0/vale_2.22.0_Linux_64-bit.tar.gz
            dest: "{{ user_programs }}"
            remote_src: true
            include: vale

    # =========================================================================
    # Stow dotfiles
    # =========================================================================

    # Stow * Stow will fail if you have run kitty or lazygit in advance as they both create non link config files on first run
    - name: Create ~/.dotfile directory
      ansible.builtin.file:
        path: "{{ lookup('ansible.builtin.env', 'HOME') }}/.dotfiles"
        state: directory

    - name: Copy dotfiles
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/dotfiles/"
        dest: "{{ lookup('ansible.builtin.env', 'HOME') }}/.dotfiles/"

    - name: Stat ./bashrc to later check if it is a link
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.bashrc"
      register: link

    - name: Backup and remove files
      when: link.stat.islnk is defined and link.stat.islnk == False
      block:
        - name: Backup .bashrc
          ansible.builtin.copy:
            src: "{{ ansible_env.HOME }}/.bashrc"
            dest: "{{ ansible_env.HOME }}/.bashrc_backup"

        # - name: Backup .bash_profile
        #   ansible.builtin.copy:
        #     src: "{{ ansible_env.HOME }}/.bash_profile"
        #     dest: "{{ ansible_env.HOME }}/.bash_profile_backup"

        - name: Delete original files to prevent stow errors
          ansible.builtin.file:
            path: '{{ item }}'
            state: absent
          with_items:
            - "{{ ansible_env.HOME }}/.bashrc"
            - "{{ ansible_env.HOME }}/.bash_profile"

    - name: Run stow
      # debian miss out 'shell' as bashrc and more is different
      ansible.builtin.command: "stow --dir={{ ansible_env.HOME }}/.dotfiles --target {{ ansible_env.HOME }} autostart helix mpv pandoc kitty lazygit --verbose=2"
      register: result
      changed_when: 'result.stderr is search("LINK: ")'
